<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 启用spring mvc 注解 -->
    <context:annotation-config/>

    <!-- 扫描base-package下的java文件，如果扫描到@Component，@Controller，@Service，@Repository等注解的类，则注册为Bean -->
    <!-- 该配置已经包含<context:annotation-config/>，无需另外再配置 -->
    <context:component-scan base-package="com.chinaweal"/>

    <!-- 配置视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--<bean id="viewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">-->
        <!-- 使用前缀和后缀 -->
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"></property>
        <!-- My note: Use to generate the final view page URL [prefix + view Name + suffix] -->
        <!-- Good Practice: views under "WEB-INF" folder are named as internal resource views -->
        <!-- forward:viewName 使用forward方式转到相应的视图，缺省的使用方式 -->
        <!-- redirect:viewName 使用redirect方式转到相应的视图 -->
    </bean>

    <!-- 配置注解的处理器映射器和处理器适配器 -->
    <!--会自动注册DefaultAnnotationHandlerMapping(处理@RequestMapping 注解，并将其注册到请求映射表中)与AnnotationMethodHandlerAdapter(确定调用哪个类的哪个方法，并且构造方法参数，返回值) 两个bean-->
    <!-- 作用：告知Spring，启用注解驱动 -->
    <mvc:annotation-driven/>

    <!--always declare <context:annotation-config>, but don't bother with <mvc:annotation-driven /> unless you want JSON support via Jackson-->

</beans>
